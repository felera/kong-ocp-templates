---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: felera-pg-template
objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: postgresql
      namespace: ${PROJECT}
      labels:
        purpose: test
      finalizers:
        - kubernetes.io/pvc-protection
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem
    status:
      phase: Bound
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 5Gi
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      labels:
        purpose: test
      name: postgresql
      namespace: ${PROJECT}
    spec:
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: postgresql
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: postgresql
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      name: postgresql-nodeport
      namespace: ${PROJECT}
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - nodePort: 30984
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: postgresql
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    data:
      database-name: ${PG_DB}
      database-password: ${PG_PASSWORD}
      database-user: ${PG_USER}
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: "{.data['database-name']}"
        template.openshift.io/expose-password: "{.data['database-password']}"
        template.openshift.io/expose-username: "{.data['database-user']}"
      # creationTimestamp: 2023-06-27T14:27:06Z
      labels:
        purpose: test
      name: postgresql
      namespace: ${PROJECT}
    type: Opaque
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      labels:
        purpose: test
      name: postgresql
      namespace: ${PROJECT}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        name: postgresql
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: postgresql
        spec:
          containers:
            - env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: postgresql
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: postgresql
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: postgresql
              image: postgresql
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                    - --live
                failureThreshold: 3
                initialDelaySeconds: 120
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              name: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  memory: 512Mi
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: postgresql-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: postgresql-data
              persistentVolumeClaim:
                claimName: postgresql
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: postgresql:10-el8
              namespace: openshift
          type: ImageChange
        - type: ConfigChange
parameters:
  - name: PROJECT
    description: Project where objects are to be deployed
    value: borrar
    required: true
  - name: PG_DB
    description: "PostgreSQL database name"
    # value: "kongdb"
    required: true
  - name: PG_PASSWORD
    description: "PostgreSQL database password"
    # value: "kong"
    required: true
  - name: PG_USER
    description: "PostgreSQL database user"
    # value: "kong"
    required: true
