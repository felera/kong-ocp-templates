kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: kong-template

parameters:
  - name: postgres_password
    description: Password for the PostgreSQL database
    required: true
  - name: postgres_user
    description: Username for the PostgreSQL database
    required: true
  - name: postgres_database
    description: Name for the PostgreSQL database
    required: true    

objects:

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: kong-config
      namespace: kong
    data:
      KONG_NGINX_DAEMON: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: kong-postgres-pvc
      finalizers:
          - kubernetes.io/pvc-protection
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem
    status:
      phase: Bound
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 5Gi

  - kind: Secret
    apiVersion: v1    
    metadata:
      name: kong-database-secret
    type: Opaque
    data:
      postgres_password: ${postgres_password}
      postgres_user: ${postgres_password}
      postgres_database: ${postgres_database}

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: kong-database
    spec:
      replicas: 1
      selector:
        app: kong-database
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: kong-database
        spec:
          containers:
            - name: kong-database
              image: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_password
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_database
              securityContext:
                capabilities: {}
                privileged: false
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: kong-postgres-data
          volumes:
            - name: kong-postgres-data
              persistentVolumeClaim:
                claimName: kong-postgres-pvc
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - kong-database
            from:
              kind: ImageStreamTag
              name: postgresql:10-el8
              namespace: openshift
          type: ImageChange
        - type: ConfigChange

  - kind: Service
    apiVersion: v1
    metadata:
      name: kong-database
    spec:
      selector:
        app: kong-database
      ports:
        - name: postgres
          port: 5432
          targetPort: 5432

  - kind: Service
    apiVersion: v1
    metadata:
      name: kong-database-nodeport
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - nodePort: 30984
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        app: kong-database
      sessionAffinity: None
      type: NodePort
  
  - kind: Job
    apiVersion: batch/v1
    metadata:
      name: kong-migration
    spec:
      template:
        metadata:
          name: kong-migration
        spec:
          restartPolicy: OnFailure
          containers:
            - name: kong-migration
              image: kong:latest
              imagePullPolicy: IfNotPresent
              command: ["kong", "migrations", "bootstrap"]
              env:
                - name: KONG_DATABASE
                  value: postgres
                - name: KONG_PG_HOST
                  value: kong-database
                - name: KONG_PG_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_database 
                - name: KONG_PG_USER
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_user
                - name: KONG_PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_password
                - name: KONG_PROXY_ACCESS_LOG
                  value: /dev/stdout
                - name: KONG_ADMIN_ACCESS_LOG
                  value: /dev/stdout
                - name: KONG_PROXY_ERROR_LOG
                  value: /dev/stderr
                - name: KONG_ADMIN_ERROR_LOG
                  value: /dev/stderr

  - kind: Service
    apiVersion: v1
    metadata:
      name: kong-proxy
    spec:
      selector:
        app: kong-proxy
      ports:
        - name: api
          port: 8000
          targetPort: 8000
        - name: admin
          port: 8001
          targetPort: 8001

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: kong-proxy
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      replicas: 1
      selector:
        app: kong-proxy
      template:
        metadata:
          labels:
            app: kong-proxy
        spec:
          containers:
            - name: kong-proxy
              image: kong:latest
              imagePullPolicy: IfNotPresent
              env:
                - name: KONG_DATABASE
                  value: postgres
                - name: KONG_PG_HOST
                  value: kong-database
                - name: KONG_PG_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_database   
                - name: KONG_PG_USER
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_user
                - name: KONG_PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kong-database-secret
                      key: postgres_password
                - name: KONG_PROXY_ACCESS_LOG
                  value: /dev/stdout
                - name: KONG_ADMIN_ACCESS_LOG
                  value: /dev/stdout
                - name: KONG_PROXY_ERROR_LOG
                  value: /dev/stderr
                - name: KONG_ADMIN_ERROR_LOG
                  value: /dev/stderr
                - name: KONG_LOG_LEVEL
                  value: info
                - name: KONG_ADMIN_LISTEN
                  value: 0.0.0.0:8001
              ports:
                - containerPort: 8000
                - containerPort: 8001

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: api
    spec:
      host: api-kong.apps-crc.testing
      to:
        kind: Service
        name: kong-proxy
        weight: 100
      port:
        targetPort: api
      wildcardPolicy: None
      
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: admin
    spec:
      host: admin-kong.apps-crc.testing
      to:
        kind: Service
        name: kong-proxy
        weight: 100
      port:
        targetPort: admin
      wildcardPolicy: None